---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

const { headings } = Astro.props;

export interface Heading {
  depth: number;
  slug: string;
  text: string;
}

function buildToc(headings: Heading[]) {
  const toc: Heading[] = [];
  const parentHeadings = new Map();
  headings.forEach((h: Heading) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      if (!parentHeadings.get(heading.depth - 1)) {
        console.log("heading.depth - 1 not found: " + heading.text);
      } else {
        parentHeadings.get(heading.depth - 1).subheadings.push(heading);
      }
    }
  });
  return toc;
}

const toc = buildToc(headings);
---

<nav class="toc">
  <div class="sticky top-24">
    <div class="pb-2 text-xl font-medium text-secondary-800">
      Table of Contents
    </div>
    <ul>
      {toc.map((heading: Heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </div>
</nav>

<script>
  function updateActiveHeading() {
    // console.log("update")
    const headings = document.querySelectorAll('h2, h3, h4, h5, h6');
    const tocLinks = document.querySelectorAll('.toc a');

    let currentActiveIndex = 0;

    headings.forEach((heading, index) => {
      const rect = heading.getBoundingClientRect();
      if (rect.top <= 100) {
        currentActiveIndex = index;
      }
    });

    tocLinks.forEach((link) => link.classList.remove('active'));
    tocLinks[currentActiveIndex]?.classList.add('active');
  }

  document.addEventListener('scroll', updateActiveHeading);
  updateActiveHeading();
</script>

<style>
  .toc a {
    display: block;
    padding: 0.2em 0;
    color: #666;
    text-decoration: none;
    transition: color 0.3s;
  }

  .toc a:hover,
  .toc a.active {
    color: #000;
    font-weight: bold;
  }
</style>

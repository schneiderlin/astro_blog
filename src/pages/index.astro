---
import '@/styles/globals.css'
import Navbar from "@components/Navbar.astro";
import Layout from "@layouts/Layout.astro";
import PageFind from "@components/PageFind.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import AlbumPreview from '@/components/album-preview.astro';
import BlogPostCard from '@/components/BlogPostCard.astro';
import { Image } from 'astro:assets';
import wakeup from '@/assets/personal/wakeup.jpg';

import natureCover from '../assets/nature-cover.jpeg';
import nature1 from '../assets/nature1.jpeg';
import nature2 from '../assets/nature2.jpeg';

import foodCover from '../assets/foods/cover.jpg';
import food1 from '../assets/foods/1.jpg';
import food2 from '../assets/foods/2.jpg';
import food3 from '../assets/foods/3.jpg';
import food4 from '../assets/foods/4.jpg';
import food5 from '../assets/foods/5.jpg';
import food6 from '../assets/foods/6.jpg';
import food7 from '../assets/foods/7.jpg';
import food8 from '../assets/foods/8.jpg';
import food9 from '../assets/foods/9.jpg';
import food10 from '../assets/foods/10.jpg';
import food11 from '../assets/foods/11.jpg';
import food12 from '../assets/foods/12.jpg';
import food13 from '../assets/foods/13.jpg';

const albums = [
  { id: 1, title: 'Nature', cover: natureCover, previews: [nature1, nature2] },
  { id: 2, title: 'Food', cover: foodCover, previews: [food1, food2, food3, food4, food5, food6, food7, food8, food9, food10, food11, food12, food13] },
  // ... other albums
];

const allPosts: CollectionEntry<'blog'>[] = await getCollection('blog');
const allTags = Array.from(new Set(allPosts.flatMap(post => post.data.tags)));

---

<Layout title="LinZiHao's Digital Garden" description="LinZiHao's Digital Garden">
  <Navbar />

  <main class="container mx-auto px-4">
    <section class="flex flex-col md:flex-row items-center justify-between m-16">
      <div class="w-full md:w-1/2">
        <Image
          src={wakeup}
          width={1600}
          height={900}
          alt="Wake up image"
          class="rounded-lg object-cover w-full h-auto"
        />
      </div>
      <div class="w-full md:w-1/2 md:pl-8 mt-4 md:mt-0">
        <h1 class="text-4xl md:text-6xl font-serif mb-4">ON THE BLOG</h1>
        <p class="text-xl">欢迎来到我的赛博花园</p>
      </div>
    </section>

    <!-- Search Section -->
    <!-- <section class="mb-16">
      <h2 class="text-2xl font-semibold mb-4">全文搜索</h2>
      <PageFind />
    </section> -->

    <!-- Language Learning Project Section -->
    <section class="mb-16">
      <a
        href="/bahasa/bahasa_project"
        class="bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden block"
      >
        <div class="p-8">
          <h3 class="text-3xl font-bold mb-4">
            语言学习项目
          </h3>
          <p class="text-lg">
            探索语言学习的新方法和技巧，提高您的语言能力。
          </p>
        </div>
      </a>
    </section>

    <!-- Album UI Section (moved up) -->
    <section class="mb-16">
      <h2 class="text-2xl font-semibold mb-6">相册集</h2>
      <div class="bg-gray-100 dark:bg-gray-800 rounded-xl p-8 shadow-lg">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
          {albums.map((album) => (
            <AlbumPreview
              title={album.title}
              cover={album.cover}
              previews={album.previews}
            />
          ))}
        </div>
      </div>
    </section>

    <!-- All Blogs Section -->
    <section>
      <h2 class="text-2xl font-semibold mb-6">所有文章</h2>

      <!-- Tag Filter Section -->
      <div class="mb-6">
        <h3 class="text-xl font-semibold mb-4">筛选标签</h3>
        <div class="flex flex-wrap gap-2" id="tag-filter">
          {allTags.map(tag => (
            <button
              class="px-3 py-1 rounded-full text-sm font-semibold bg-gray-200 text-gray-700"
              data-tag={tag}
            >
              {tag}
            </button>
          ))}
        </div>
      </div>

      <div class="columns-1 sm:columns-2 lg:columns-3 gap-6" id="posts-container">
        {allPosts
          .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
          .map(post => (
            <BlogPostCard post={post} />
          ))}
      </div>
    </section>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const selectedTags = new Set();
    const tagButtons = document.querySelectorAll('#tag-filter button');
    const posts = document.querySelectorAll('.post');

    tagButtons.forEach(button => {
      button.addEventListener('click', () => {
        const tag = button.getAttribute('data-tag');

        if (selectedTags.has(tag)) {
          selectedTags.delete(tag);
          button.classList.remove('bg-blue-500', 'text-white');
          button.classList.add('bg-gray-200', 'text-gray-700');
        } else {
          selectedTags.add(tag);
          button.classList.remove('bg-gray-200', 'text-gray-700');
          button.classList.add('bg-blue-500', 'text-white');
        }

        filterPosts();
      });
    });

    function filterPosts() {
      posts.forEach(post => {
        const postTags = post.getAttribute('data-tags').split(',');
        const isVisible = Array.from(selectedTags).some(tag => postTags.includes(tag));
        post.style.display = isVisible || selectedTags.size === 0 ? 'block' : 'none';
      });
    }
  });
</script>
